@model SESOPtracker.Models.Entities.Equipamento

@{
    ViewData["Title"] = Model.patrimonio;
    ViewData["HeaderTitle"] = "Equipamento " + Model.patrimonio;
}

<section>
    <div>
        <main>
            <h1> Equipamento @Model.patrimonio </h1>
            <p> <span> @Html.DisplayNameFor(model => model.item) </span> @Html.DisplayFor(modelItem => Model.item) </p>
            <p> <span> @Html.DisplayNameFor(model => model.nome) </span> @Html.DisplayFor(modelItem => Model.nome) </p>
            <p> <span> @Html.DisplayNameFor(model => model.setor) </span> @Html.DisplayFor(modelItem => Model.setor) </p>
            <p> <span> @Html.DisplayNameFor(model => model.subCategoria) </span> @Html.DisplayFor(modelItem => Model.subCategoria) </p>
            <p> <span> @Html.DisplayNameFor(model => model.categoria) </span> @Html.DisplayFor(modelItem => Model.categoria) </p>
            <p> <span> @Html.DisplayNameFor(model => model.situacao) </span> @Html.DisplayFor(modelItem => Model.Situacao.descricao) </p>
            <p> <span> @Html.DisplayNameFor(model => model.sala) </span> @Html.DisplayFor(modelItem => Model.Sala.local) </p>
        </main>
        <aside id="history">
            <p> Hoje </p>
            @foreach (var historico in Model.Historico.Reverse()) {
                <div data-color="@historico.Situacao.cor">
                    <div>
                        <span> Em @historico.dataAlteracao.Replace(" ", "  às ") </span>
                        @foreach (var item in historico.descricao.Split(", "))
                        {
                            <p> @item </p>
                        }
                        @if (historico.observacao != null)
                        {
                            <span> @historico.observacao </span>
                        }
                    </div>
                    <aside data-important="@historico.importante">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-lg" viewBox="0 0 16 16">
                            <path d="M7.005 3.1a1 1 0 1 1 1.99 0l-.388 6.35a.61.61 0 0 1-1.214 0zM7 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0" />
                        </svg>
                    </aside>
                </div>
            }
        </aside>
    </div>
</section>



<div class="modal fade" id="deleteEquipment" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h2>Tem certeza que seja deletar o equipamento @Model.patrimonio ?</h2>
                <p>Ao concordar em deletar, todos os dados do equipamento, incluindo o histórico, serão perdidos.</p>
                <div>
                    <p> <span> @Html.DisplayNameFor(model => model.patrimonio) </span> @Html.DisplayFor(modelItem => Model.patrimonio) </p>
                    @if (Model.item != null)
                    {
                        <p> <span> @Html.DisplayNameFor(model => model.item) </span> @Html.DisplayFor(modelItem => Model.item) </p>
                    }
                    @if (Model.nome != null)
                    {
                        <p> <span> @Html.DisplayNameFor(model => model.nome) </span> @Html.DisplayFor(modelItem => Model.nome) </p>
                    }
                    @if (Model.setor != null)
                    {
                        <p> <span> @Html.DisplayNameFor(model => model.setor) </span> @Html.DisplayFor(modelItem => Model.setor) </p>
                    }
                    <p> <span> @Html.DisplayNameFor(model => model.subCategoria) </span> @Html.DisplayFor(modelItem => Model.subCategoria) </p>
                    <p> <span> @Html.DisplayNameFor(model => model.categoria) </span> @Html.DisplayFor(modelItem => Model.categoria) </p>
                    <p> <span> @Html.DisplayNameFor(model => model.situacao) </span> @Html.DisplayFor(modelItem => Model.Situacao.descricao) </p>
                    <p> <span> @Html.DisplayNameFor(model => model.sala) </span> @Html.DisplayFor(modelItem => Model.Sala.local) </p>
                </div>
            </div>
            <form class="modal-footer" asp-action="DeleteConfirmed">
                <input type="hidden" name="id" value="@Model.patrimonio" />
                <button type="button" class="btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <input type="submit" value="Sim, deletar" class="btn btn-danger" />
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="bindEquipments" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h2>Vincular equipamentos</h2>
                <p>Essa ferramenta permite que você vincule dois equipamentos. O equipamento que for vinculado a este será modificado para 'Transferido' automaticamente</p>
                
                <div class="equipments-to-bind">
                    <fiedlset>
                        <select id="normalize" placeholder="Selecione um equipamento">
                            <option value="" disabled selected> Selecione um equipamento </option>
                        </select>
                    </fiedlset>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-merge-icon lucide-merge"><path d="m8 6 4-4 4 4" /><path d="M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22" /><path d="m20 22-5-5" /></svg>
                    <fieldset>
                        <input readonly value="Equipamento @Model.patrimonio" />
                    </fieldset>
                </div>

                <div class="form-group">
                    <input type="checkbox" id="aware" name="aware" hidden>
                    <label for="aware"></label>
                    <span> Estou ciente nas implicações que a minha decisão terá nos equipamentos </span>
                </div>
            </div>
            <footer class="modal-footer">
                <button type="button" class="btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <input type="submit" value="Vincular" class="btn-default" disabled/>
            </footer>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const paragraphs = document.querySelectorAll("p");

        paragraphs.forEach(paragraph => {
            if (paragraph.textContent.includes("VAZIO")) {
                paragraph.innerHTML = paragraph.innerHTML.replace(
                    /'VAZIO'/g,
                    '<span class="highlight">VAZIO</span>'
                );
            }
            if (paragraph.textContent.includes("nulo")) {
                paragraph.innerHTML = paragraph.innerHTML.replace(
                    /'nulo'/g,
                    '<span class="highlight">VAZIO</span>'
                );
            }
            if (paragraph.textContent.includes("null")) {
                paragraph.innerHTML = paragraph.innerHTML.replace(
                    /'null'/g,
                    '<span class="highlight">VAZIO</span>'
                );
            }
        });
    })
</script>
<script>
    document.addEventListener("DOMContentLoaded", async () => {
        let equipamentos = await $.ajax({
            url: '@Url.Action("EquipmentsPatrimonio", "Equipamentos")',
            method: "GET",
            success: (response) => {
                return response
            },
            error: (erro) => {
                console.error(erro)
            }
        })

        for (let i = 0; i < equipamentos.length; i++) {
            if (equipamentos[i] != "@Model.patrimonio") {
                $("#normalize").append(`<option value="${ equipamentos[i] }"> ${ equipamentos[i] } </option>`)
            }
        }

        $('#normalize').selectize();


        $("#normalize").on("change", function() {
            if ($("#aware:checked").length != 0 && $("#selectize .item").attr("data-value") != "") {
                $("[value=Vincular]").removeAttr("disabled")
            } else {
                $("[value=Vincular]").attr("disabled", "disabled")
            }
        })

        $("#aware").on("change", function() {
            if (this.checked) {
                if ($("#normalize").val() != "") {
                    $("[value=Vincular]").removeAttr("disabled")
                }
            } else {
                $("[value=Vincular]").attr("disabled", "disabled")
            }
        })


        $("[value=Vincular]").on("click", () => {
            const equipmentToBind = $(".selectize-input .item").attr("data-value")
            const currentEquipment = "@Model.patrimonio"

            $.ajax({
                url: '@Url.Action("BindEquipments", "Equipamentos")',
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    toBind: equipmentToBind,
                    equipment: currentEquipment
                }),
                success: () => {
                    console.log("ok")
                },
                error: () => {
                    console.error("erro")
                }
            })
        })
    })
</script>

