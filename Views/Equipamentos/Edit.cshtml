@model SESOPtracker.Models.Entities.Equipamento

@{
    ViewData["Title"] = "Equipamento " + Model.patrimonio;
    ViewData["HeaderTitle"] = "Editar equipamento " + Model.patrimonio;

    var historico = ViewBag.Historico as SESOPtracker.Models.Entities.Historico;
    var options = new System.Text.Json.JsonSerializerOptions {
        ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve,
        WriteIndented = true
    };

    var modelJson = System.Text.Json.JsonSerializer.Serialize(Model, options);
}

<section>
    <form asp-action="Edit" id="editForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div hidden class="alert alert-danger" role="alert"> Não foi possível enviar pois nenhuma alteração foi feita </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="patrimonio" class="control-label"></label>
                    <fieldset>
                        <input asp-for="patrimonio" readonly/>
                    </fieldset>
                    <span asp-validation-for="patrimonio" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="item" class="control-label"></label>
                    <fieldset>
                        <input asp-for="item" />
                    </fieldset>
                    <span asp-validation-for="item" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="nome" class="control-label"></label>
                    <fieldset>
                        <input asp-for="nome" />
                    </fieldset>
                    <span asp-validation-for="nome" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="setor" class="control-label"></label>
                    <fieldset>
                        <input asp-for="setor" style="text-transform: uppercase" ; />
                    </fieldset>
                    <span asp-validation-for="setor" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="subCategoria" class="control-label"></label>
                    <fieldset>
                        <input asp-for="subCategoria" />
                    </fieldset>
                    <span asp-validation-for="subCategoria" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="categoria" class="control-label"></label>
                    <fieldset>
                        <select>
                            <option value="Informática" selected="@(Model.categoria == "Informática")"> Informática </option>
                            <option value="Audiovisual" selected="@(Model.categoria == "Audiovisual")"> Audiovisual </option>
                            <option value="Mobília" selected="@(Model.categoria == "Mobília")"> Mobília </option>
                            <option value="Telefonia" selected="@(Model.categoria == "Telefonia")"> Telefonia </option>
                        </select>
                        <input asp-for="categoria" hidden />
                    </fieldset>
                    <span asp-validation-for="categoria" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="situacao" class="control-label"></label>
                    <fieldset>
                        <select asp-for="situacao" class="situacao-select" asp-items="ViewBag.situacao"></select>
                    </fieldset>
                    <span asp-validation-for="situacao" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="sala" class="control-label"></label>
                    <fieldset>
                        <select asp-for="sala" class="situacao-select" asp-items="ViewBag.sala"></select>
                    </fieldset>
                    <span asp-validation-for="sala" class="text-danger"></span>
                </div>
            </div>
        </div>

        <input asp-for="dataCriacao" hidden />
        <footer>
            <button type="button" class="btn-default check-values" data-bs-target="#editEquipment">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-send" viewBox="0 0 16 16">
                    <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z" />
                </svg>
            </button>
        </footer>

        <div class="modal fade" id="editEquipment" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-body">
                        <h2> Adicione mais algumas informações </h2>
                        <p> Se quiser, descreva alguma observação para a alteração ou marque como importante </p>
                        <div>
                            <div class="form-group">
                                <label id="numeross" name="numeross" class="control-label">Número da solicitação</label>
                                <fieldset>
                                    <input id="numeross" name="numeross" />
                                </fieldset>
                            </div>
                            <div class="form-group">
                                <label id="observacao" name="observacao" class="control-label">Observação</label>
                                <fieldset>
                                    <input id="observacao" name="observacao" />
                                </fieldset>
                            </div>
                            <div class="form-group">
                                <input type="checkbox" id="importante" name="importante" hidden>
                                <label for="importante"></label>
                                <span> Marcar como importante </span>
                            </div>

                            <input id="dataAlteracao" name="dataAlteracao" value="@DateTime.Now.ToString("dd/MM/yyyy HH:mm")" hidden />
                            <input id="descricao" name="descricao" hidden />
                        </div>
                    </div>
                    <footer class="modal-footer">
                        <button type="button" class="btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <input type="submit" value="Confirmar" class="btn-default" />
                    </footer>
                </div>
            </div>
        </div>
    </form>
</section>


<script src="/js/create-sala.js"></script>
<script>
    var equipamentoOriginal = @Html.Raw(modelJson);

    function setDescricao() {
        let item = document.getElementById("item").value
        let nome = document.getElementById("nome").value
        let setor = document.getElementById("setor").value
        let subcategoria = document.getElementById("subCategoria").value
        let categoria = document.getElementById("categoria").value
        let situacao = document.getElementById("situacao").value
        let sala = document.getElementById("sala").value

        item = item == "" ? null : item
        nome = nome == "" ? null : nome
        setor = setor == "" ? null : setor

        let descricaoAlteracoes = []

        if (equipamentoOriginal.item != item) {
            descricaoAlteracoes.push(`Item alterado de '${equipamentoOriginal.item == null ? "VAZIO" : equipamentoOriginal.item}' para '${item == null ? "VAZIO" : item}'`);
        }

        if (equipamentoOriginal.nome != nome) {
            descricaoAlteracoes.push(`Nome alterado de '${equipamentoOriginal.nome == null ? "VAZIO" : equipamentoOriginal.nome}' para '${nome == null ? "VAZIO" : nome}'`);
        }

        if (equipamentoOriginal.subCategoria != subcategoria) {
            descricaoAlteracoes.push(`Subcategoria alterada de '${equipamentoOriginal.subCategoria}' para '${subcategoria}'`);
        }

        if (equipamentoOriginal.categoria != categoria) {
            descricaoAlteracoes.push(`Categoria alterada de '${equipamentoOriginal.categoria}' para '${categoria}'`);
        }

        if (equipamentoOriginal.setor != setor) {
            descricaoAlteracoes.push(`Setor alterado de '${equipamentoOriginal.setor == null ? "VAZIO" : equipamentoOriginal.setor}' para '${setor == null ? "VAZIO" : setor}'`);
        }

        if (equipamentoOriginal.situacao != situacao) {
            descricaoAlteracoes.push(`Situação alterada para '${document.getElementById("situacao").querySelector("[selected]").innerText}'`);
        }

        if (equipamentoOriginal.sala != sala) {
            descricaoAlteracoes.push(`Sala alterada de '${equipamentoOriginal.sala}' para '${sala}'`);
        }

        let descricao = descricaoAlteracoes.join(", ");
        document.getElementById("descricao").value = descricao
    };

    document.querySelector("[data-bs-target='#editEquipment']").addEventListener('click', () => setDescricao());
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        $("#revert").on("click", () => {
            $("[name=item]").val("@Model.item")
            $("[name=nome]").val("@Model.nome")
            $("[name=setor]").val("@Model.setor")
            $("[name=subCategoria]").val("@Model.subCategoria")

            $("label[for=categoria] + fieldset > select > *").removeAttr("selected")
            $(`label[for=categoria] + fieldset option[value=${"@Html.Raw(Model.categoria)"}]`).attr("selected", "selected")
            $("[name=categoria]").val("@Model.categoria")

            $("label[for=situacao] + fieldset > select > *").removeAttr("selected")
            $(`label[for=situacao] + fieldset option[value=${"@Html.Raw(Model.situacao)"}]`).attr("selected", "selected")

            $("label[for=sala] + fieldset > select > *").removeAttr("selected")
            $(`label[for=sala] + fieldset option[value=${"@Html.Raw(Model.sala)"}]`).attr("selected", "selected")
        })
    })
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const subCategoriaInput = $("[name=subCategoria]");
        const validationMessage = $("[data-valmsg-for=subCategoria]");

        const rawValues = $(".form-group [name]").slice(0, -3).map(function () {
            return $(this).val();
        }).get();

        $(".check-values").on("click", function () {
            const subCategoriaValue = subCategoriaInput.val();

            validateSubCategoria(subCategoriaValue, function (isValid) {
                if (isValid) {
                    validationMessage.removeClass("field-validation-error")

                    const newValues = $(".form-group [name]").slice(0, -3).map(function () {
                        return $(this).val();
                    }).get();
                    
                    if (!arraysAreEquals(newValues, rawValues)) {
                        const modalElement = document.getElementById("editEquipment");
                        const modal = new bootstrap.Modal(modalElement);
                        modal.show();

                        $(".alert").attr("hidden", "hidden");
                    } else {
                        $(".alert").removeAttr("hidden");
                    }
                } else {
                    $(".alert").attr("hidden", "hidden");
                    validationMessage.addClass("field-validation-error")
                }
            });
        });

        // Função para validar o campo subCategoria
        function validateSubCategoria(value, callback) {
            $.ajax({
                url: '@Url.Action("BeforeEdit", "Equipamentos")',
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(value),
                success: function () {
                    validationMessage.text("");
                    if (callback) callback(true);
                },
                error: function (response) {
                    const errorMessage = response.responseJSON?.error || "Erro ao validar o campo.";
                    validationMessage.text(errorMessage);
                    if (callback) callback(false);
                },
            });
        }
    });

    function arraysAreEquals(arr1, arr2) {
        if (arr1.length !== arr2.length) {
            return false;
        }

        return arr1.every((value, index) => value === arr2[index]);
    }
</script>

