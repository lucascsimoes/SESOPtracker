@using System.Text.Json
@using System.Text.Json.Serialization
@model IEnumerable<SESOPtracker.Models.Entities.Equipamento>

@{
    ViewData["Title"] = "Relatórios";
    var equipamentosSimplificados = Model.Select(e => new {
        e.patrimonio,
        e.nome,
        e.categoria,
        e.setor,
        Sala = e.Sala != null ? new { e.Sala.local } : null,
        Situacao = e.Situacao != null ? new { e.Situacao.descricao } : null
    });
}

<header>
    <div>
        <button type="button" class="btn-secondary" data-bs-toggle="modal" data-bs-target="#keywordModal"> Gerar por palavra-chave </button>
        <button type="button" class="btn-secondary" data-bs-toggle="modal" data-bs-target="#equipmentListModal"> Gerar por seleção </button>
    </div>
</header>

<section>
    <div class="quantity">
        <div>
            <h1> @Model.Count() </h1>
            <p> equipamentos registrados </p>
        </div>
    </div>

    @* <div> *@
    @*     <canvas id="myChart"></canvas> *@
    @* </div> *@
</section>


@await Html.PartialAsync("Parts/_GenerateByEquipmentList", Model)
@await Html.PartialAsync("Parts/_GenerateByKeyword", Model)

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@* <script> *@
@*     let equipamentos = @Html.Raw(JsonSerializer.Serialize(equipamentosSimplificados)); *@

@*     const situacoes = equipamentos.reduce((acc, equipamento) => { *@
@*         if (equipamento.Situacao?.descricao) { *@
@*             let situacaoExistente = acc.find(situacao => situacao.descricao === equipamento.Situacao.descricao); *@
@*             if (situacaoExistente) { *@
@*                 situacaoExistente.quantidade++; *@
@*             } else { *@
@*                 acc.push({ local: equipamento.Situacao.descricao, quantidade: 1 }); *@
@*             } *@
@*         } *@
@*         return acc; *@
@*     }, []); *@


@*     const ctx = document.getElementById('myChart'); *@
@*     const config = { *@
@*         type: 'doughnut', *@
@*         data: { *@
@*             labels: situacoes.map(situacao => situacao.local), *@
@*             datasets: [{ *@
@*                 label: 'Equipamentos', *@
@*                 data: situacoes.map(situacao => situacao.quantidade), *@
@*                 backgroundColor: [ *@
@*                     'rgb(255, 99, 132)', *@
@*                     'rgb(54, 162, 235)', *@
@*                     'rgb(255, 205, 86)', *@
@*                     'rgb(255, 205, 86)', *@
@*                     'rgb(255, 205, 86)' *@

@*                 ], *@
@*                 borderWidth: 1, *@
@*                 hoverOffset: 4 *@
@*             }] *@
@*         }, *@
@*         options: { *@
@*             plugins: { *@
@*                 legend: { *@
@*                     display: false *@
@*                 }, *@
@*                 title: { *@
@*                     display: true, *@
@*                     text: "Equipamentos por sala", *@
@*                     color: "white", *@
@*                     font: { *@
@*                         size: 18 *@
@*                     }, *@
@*                     padding: { *@
@*                         bottom: 20 *@
@*                     } *@
@*                 } *@
@*             } *@
@*         } *@
@*     }; *@

@*     new Chart(ctx, config); *@
@* </script> *@